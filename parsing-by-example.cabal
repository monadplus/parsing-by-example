cabal-version:       3.0
name:                parsing-by-example
version:             0.1.0.0
synopsis:            Fill the synopsis
description:         Fill the description
homepage:            https://github.com/monadplus/parsing-by-example
bug-reports:         https://github.com/monadplus/parsing-by-example/issues
license:             MIT
license-file:        LICENSE
author:              Arnau Abella
maintainer:          Arnau Abella <arnauabella@gmail.com>
copyright:           2021-2022 Arnau Abella
category:            Experimental
build-type:          Simple
extra-doc-files:     README.md
extra-source-files:  README.md
tested-with:         GHC == 9.2.1

source-repository head
  type:                git
  location:            https://github.com/monadplus/parsing-by-example.git

Common common-options
  default-language:    Haskell2010
  build-depends:       base >=4.16 && <4.17
  ghc-options:         -Wall
                       -Wcompat
                       -Widentities
                       -Wincomplete-uni-patterns
                       -Wincomplete-record-updates
                       -Wredundant-constraints
                       -Wnoncanonical-monad-instances
  if impl(ghc >= 8.2)
    ghc-options:       -fhide-source-paths
  if impl(ghc >= 8.4)
    ghc-options:       -Wmissing-export-lists
                       -Wpartial-fields
  if impl(ghc >= 8.8)
    ghc-options:       -Wmissing-deriving-strategies
                       -fwrite-ide-info
                       -hiedir=.hie
  if impl(ghc >= 8.10)
    ghc-options:       -Wunused-packages
  if impl(ghc >= 9.0)
    ghc-options:       -Winvalid-haddock
  if impl(ghc >= 9.2)
    ghc-options:       -Wredundant-bang-patterns
                       -Woperator-whitespace
  if impl(ghc >= 9.4)
    ghc-options:       -Wredundant-strictness-flags

flag dev
    description: Turn on development settings.
    default:     False
    manual:      True

Executable json
  import:                common-options
  main-is:               Main.hs
  hs-source-dirs:        app/JSON

  build-depends:         parsing-by-example,
                         optparse-applicative ^>= 0.17,
                         text ^>=1.2,
                         bytestring ^>=0.11,

  if flag(dev)
    ghc-options: -O0
  else
    ghc-options: -O2

Library
  import:             common-options
  hs-source-dirs:     src

  default-extensions: StrictData

  exposed-modules:     JSON
                     , JSON.Class
                     , JSON.Gen
                     , JSON.Lexer
                     , JSON.Parser

  other-modules: Pretty

  build-depends:      Earley ^>= 0.13,
                      hedgehog ^>= 1.1,
                      megaparsec ^>= 9.2,
                      parser-combinators ^>= 1.3,
                      prettyprinter ^>= 1.7,
                      prettyprinter-ansi-terminal ^>= 1.1,
                      scientific ^>= 0.3,
                      text ^>=1.2,
                      unordered-containers ^>= 0.2,

Test-suite tasty
  import:               common-options
  type:                 exitcode-stdio-1.0
  main-is:              Main.hs
  hs-source-dirs:       tasty

  other-modules:

  build-depends:        parsing-by-example,
                        hedgehog ^>= 1.1,
                        tasty ^>=1.4,
                        tasty-hedgehog ^>= 1.2,
                        -- tasty-hunit ^>= 0.10,
                        text ^>=1.2,

Test-suite doctest
  import:              common-options
  type:                exitcode-stdio-1.0
  hs-source-dirs:      doctest
  main-is:             Main.hs
  build-depends:       doctest  >=0.20 && <0.21
